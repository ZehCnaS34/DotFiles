colorscheme tomorrow-night

def ide %{
    rename-client main
    set global jumpclient main

    new rename-client tools
    set global toolsclient tools

    new rename-client docs
    set global docsclient docs
}


def -docstring 'invoke fzf to open a file' \
fzf-file %{ %sh{
    if [ -z "$TMUX" ]; then
        echo echo only works inside tmux
    else
        FILE=$(find * -type f | fzf-tmux -d 15)
        if [ -n "$FILE" ]; then
            printf 'eval -client %%{%s} edit %%{%s}\n' "${kak_client}" "${FILE}" | kak -p "${kak_session}"
        fi
    fi
} }

def -docstring 'invoke fzf to select a buffer' \
fzf-buffer %{ %sh{
    if [ -z "$TMUX" ]; then
        echo echo only works inside tmux
    else
        BUFFER=$(printf %s\\n "${kak_buflist}" | tr : '\n' | fzf-tmux -d 15)
        if [ -n "$BUFFER" ]; then
            echo "eval -client '$kak_client' 'buffer ${BUFFER}'" | kak -p ${kak_session}
        fi
    fi
} }


# my configuration
set global tabstop 4


map -docstring "FZF File" global user f :fzf-file<ret>
map -docstring "FZF Buffer" global user b :fzf-buffer<ret>
map -docstring "Source Configuration" global user r :source<space>${HOME}/.config/kak/kakrc<ret>

hook global BufCreate .*\.(js|jsx) %{
     set buffer formatcmd 'prettier --parser babylon'
     add-highlighter buffer number_lines
     set buffer tabstop 2
     set buffer grepcmd 'ag --ignore=node_modules --ignore=dist/* --ignore=bundle.js --ignore=*.min.js'
}

hook global BufWritePost .*\.(js|jsx) %{
    git status
}

hook global BufWritePre .*\.(js|jsx) %{
    format
}

hook global WinCreate .*\.* %{
  source .kak
}


